name: Validate AliExpress Links

on:
  schedule:
    # Run every day at 9:00 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual trigger
  pull_request:
    paths:
      - '**.md'
      - '.github/workflows/validate-aliexpress-links.yml'
      - 'scripts/validate_aliexpress_links.py'

jobs:
  validate-links:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Validate AliExpress links
        id: validate
        run: |
          python scripts/validate_aliexpress_links.py
        continue-on-error: true

      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: link-validation-report
          path: aliexpress-links-report.txt
          retention-days: 30

      - name: Create Issue if links are broken
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let report = '';
            try {
              report = fs.readFileSync('aliexpress-links-report.txt', 'utf8');
            } catch (error) {
              report = 'Error reading validation report.';
            }

            // Check if there's already an open issue about broken links
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'broken-links'
            });

            const existingIssue = issues.data.find(issue =>
              issue.title.includes('AliExpress Links Validation Failed')
            );

            if (existingIssue) {
              // Update existing issue with new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssue.number,
                body: `## Link Validation Failed - ${new Date().toISOString().split('T')[0]}\n\n${report}\n\n---\n*Automated check from workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}*`
              });
            } else {
              // Create new issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸ”— AliExpress Links Validation Failed',
                body: `## Link Validation Report\n\n${report}\n\n---\n*This issue was automatically created by the link validation workflow.*\n*Workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}*`,
                labels: ['broken-links', 'automated']
              });
            }
